#!/bin/bash
set -euo pipefail

reveal_bin="node_modules/.bin/reveal-md"

new() {
    talk_name="$2"
    if [[ -n "$talk_name" ]]; then
        talk_dir="src/$talk_name"
        talk_file="$talk_dir/talk.md"

        mkdir -p "$talk_dir"
        cp talk.md "$talk_file"
        sed -ie "s/{{TITLE}}/$talk_name/g" "$talk_file"
        echo "Talk $talk_name created at $talk_dir"
    fi
}

mark:done() {
    talk_name="$2"
    talk_folder="src/$talk_name"
    if [[ -n "$talk_folder" ]]; then
        done_talk_file="$talk_folder/.done"
        touch $done_talk_file
        git add $done_talk_file
        git commit -m "Marked $talk_name as done"
    fi
}

compile:pdf() {
    talk_name="$2"
    talk_path="src/$2"

    output_dir="dist"
    output_talk="$output_dir/$talk_name"
    mkdir -p $output_dir

    echo "Compiling pdf for $talk_name"
    $reveal_bin "$talk_path/talk.md" --print "$output_talk"
}

compile:html() {
    talk_name="$2"
    talk_path="src/$2/talk.md"

    output_dir="dist"
    output_talk="$output_dir/$talk_name"
    mkdir -p $output_dir

    echo "Compiling html for $talk_name"
    $reveal_bin "$talk_path" --static "$output_talk"
}

present() {
    talk_name="$2"
    echo "Presenting $talk_name"
    $reveal_bin "src/$talk_name/talk.md" --host 0.0.0.0
}

present:all() {
    $reveal_bin src --host 0.0.0.0
}

done:compile() {
    for talk in $(ls src/); do
        if [[ -e "src/$talk/.done" ]]; then
            compile:pdf _ $talk
            compile:html _ $talk
        fi
    done
}

todo:list() {
    for talk_todo in $(ls src/); do
        if [[ ! -e "src/$talk_todo/.done" ]]; then
            echo "TODO: $talk_todo"
        fi
    done
}


help() {
    cat "$0" | grep "^.*() {$" | cut -d "(" -f1
}

if [ ! -z ${1:-} ]; then
    "$1" "$@"
else
    help
fi
